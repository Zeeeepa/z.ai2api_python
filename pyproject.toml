[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "z-ai2api-python"
version = "0.2.0"
description = "OpenAI-compatible multi-provider AI API server supporting Z.AI, K2Think, LongCat, and more"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Z.AI2API Contributors"}
]
keywords = ["ai", "openai", "api", "proxy", "llm", "chat", "glm", "k2think", "longcat"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]

dependencies = [
    "fastapi>=0.116.1",
    "granian[reload,pname]>=2.5.2",
    "httpx>=0.28.1",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "pydantic-core>=2.33.2",
    "typing-inspection>=0.4.1",
    "fake-useragent>=2.2.0",
    "loguru>=0.7.3",
    "psutil>=7.0.0",
    "json-repair>=0.44.1",
    "rich>=13.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]

[project.urls]
Homepage = "https://github.com/Zeeeepa/z.ai2api_python"
Documentation = "https://github.com/Zeeeepa/z.ai2api_python#readme"
Repository = "https://github.com/Zeeeepa/z.ai2api_python"
Issues = "https://github.com/Zeeeepa/z.ai2api_python/issues"

[project.scripts]
z-ai2api = "app.cli:main"

[tool.setuptools]
packages = ["app", "app.core", "app.models", "app.providers", "app.utils", "app.auth"]

[tool.setuptools.package-data]
app = ["py.typed"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = [
    "--strict-markers",
    "--tb=short",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py38"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

